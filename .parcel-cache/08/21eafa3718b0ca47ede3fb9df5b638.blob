var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
//--> Importing Assets
var _iconsSvg = require("url:../../img/icons.svg");
var _iconsSvgDefault = parcelHelpers.interopDefault(_iconsSvg);
class View {
    _data;
    render(data) {
        if (!data || data.length === 0) return this.renderError();
        this._data = data;
        const markup = this._generateMarkup();
        this._clear();
        this._parentEl.insertAdjacentHTML('afterbegin', markup);
    }
    update(data) {
        this._data = data;
        const newMarkup = this._generateMarkup();
        const newDom = document.createRange().createContextualFragment(newMarkup);
        const newElements = Array.from(newDom.querySelectorAll('*'));
        const currentElements = Array.from(this._parentEl.querySelectorAll('*'));
        newElements.forEach((el, i)=>{
            const curEl = currentElements[i];
            //--> Updates changed text
            if (!el.isEqualNode(curEl) && el.firstChild.nodeValue.trim() !== '') curEl.textContent = el.textContent;
            //--> Update changed attributes
            if (!el.isEqualNode(curEl)) Array.from(el.attributes).forEach((attr)=>{
                curEl.setAttribute(attr.name, attr.value);
            });
        });
    }
    _clear() {
        this._parentEl.innerHTML = '';
    }
    renderSpinner() {
        const spinner = `\n        <div class="spinner">\n          <svg>\n            <use href="${_iconsSvgDefault.default}#icon-loader"></use>\n          </svg>\n        </div>\n      `;
        this._clear();
        this._parentEl.insertAdjacentHTML('afterbegin', spinner);
    }
    renderError(message = this._errorMessage) {
        const markup = `\n          <div class="error">\n            <div>\n              <svg>\n                <use href="${_iconsSvgDefault.default}#icon-alert-triangle"></use>\n              </svg>\n            </div>\n            <p>${message}</p>\n          </div>\n    `;
        this._clear();
        this._parentEl.insertAdjacentHTML('afterbegin', markup);
    }
    renderMessage(message = this._message) {
        const markup = `\n          <div class="message">\n            <div>\n              <svg>\n                <use href="${_iconsSvgDefault.default}#icon-smile"></use>\n              </svg>\n            </div>\n            <p>${message}</p>\n          </div>\n    `;
        this._clear();
        this._parentEl.insertAdjacentHTML('afterbegin', markup);
    }
}
exports.default = View;
